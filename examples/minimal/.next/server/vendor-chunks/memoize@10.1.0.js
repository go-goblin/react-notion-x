"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/memoize@10.1.0";
exports.ids = ["vendor-chunks/memoize@10.1.0"];
exports.modules = {

/***/ "(pages-dir-node)/../../node_modules/.pnpm/memoize@10.1.0/node_modules/memoize/distribution/index.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/.pnpm/memoize@10.1.0/node_modules/memoize/distribution/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ memoize),\n/* harmony export */   memoizeClear: () => (/* binding */ memoizeClear),\n/* harmony export */   memoizeDecorator: () => (/* binding */ memoizeDecorator)\n/* harmony export */ });\n/* harmony import */ var mimic_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mimic-function */ \"(pages-dir-node)/../../node_modules/.pnpm/mimic-function@5.0.1/node_modules/mimic-function/index.js\");\n\nconst cacheStore = new WeakMap();\nconst cacheTimerStore = new WeakMap();\n/**\n[Memoize](https://en.wikipedia.org/wiki/Memoization) functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input.\n\n@param function_ - The function to be memoized.\n\n@example\n```\nimport memoize from 'memoize';\n\nlet index = 0;\nconst counter = () => ++index;\nconst memoized = memoize(counter);\n\nmemoized('foo');\n//=> 1\n\n// Cached as it's the same argument\nmemoized('foo');\n//=> 1\n\n// Not cached anymore as the arguments changed\nmemoized('bar');\n//=> 2\n\nmemoized('bar');\n//=> 2\n```\n*/\nfunction memoize(function_, { cacheKey, cache = new Map(), maxAge, } = {}) {\n    if (maxAge === 0) {\n        return function_;\n    }\n    if (typeof maxAge === 'number') {\n        const maxSetIntervalValue = 2_147_483_647;\n        if (maxAge > maxSetIntervalValue) {\n            throw new TypeError(`The \\`maxAge\\` option cannot exceed ${maxSetIntervalValue}.`);\n        }\n        if (maxAge < 0) {\n            throw new TypeError('The `maxAge` option should not be a negative number.');\n        }\n    }\n    const memoized = function (...arguments_) {\n        const key = cacheKey ? cacheKey(arguments_) : arguments_[0];\n        const cacheItem = cache.get(key);\n        if (cacheItem) {\n            return cacheItem.data;\n        }\n        const result = function_.apply(this, arguments_);\n        const computedMaxAge = typeof maxAge === 'function' ? maxAge(...arguments_) : maxAge;\n        cache.set(key, {\n            data: result,\n            maxAge: computedMaxAge ? Date.now() + computedMaxAge : Number.POSITIVE_INFINITY,\n        });\n        if (computedMaxAge && computedMaxAge > 0 && computedMaxAge !== Number.POSITIVE_INFINITY) {\n            const timer = setTimeout(() => {\n                cache.delete(key);\n            }, computedMaxAge);\n            timer.unref?.();\n            const timers = cacheTimerStore.get(function_) ?? new Set();\n            timers.add(timer);\n            cacheTimerStore.set(function_, timers);\n        }\n        return result;\n    };\n    (0,mimic_function__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(memoized, function_, {\n        ignoreNonConfigurable: true,\n    });\n    cacheStore.set(memoized, cache);\n    return memoized;\n}\n/**\n@returns A [decorator](https://github.com/tc39/proposal-decorators) to memoize class methods or static class methods.\n\n@example\n```\nimport {memoizeDecorator} from 'memoize';\n\nclass Example {\n    index = 0\n\n    @memoizeDecorator()\n    counter() {\n        return ++this.index;\n    }\n}\n\nclass ExampleWithOptions {\n    index = 0\n\n    @memoizeDecorator({maxAge: 1000})\n    counter() {\n        return ++this.index;\n    }\n}\n```\n*/\nfunction memoizeDecorator(options = {}) {\n    const instanceMap = new WeakMap();\n    return (target, propertyKey, descriptor) => {\n        const input = target[propertyKey]; // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n        if (typeof input !== 'function') {\n            throw new TypeError('The decorated value must be a function');\n        }\n        delete descriptor.value;\n        delete descriptor.writable;\n        descriptor.get = function () {\n            if (!instanceMap.has(this)) {\n                const value = memoize(input, options);\n                instanceMap.set(this, value);\n                return value;\n            }\n            return instanceMap.get(this);\n        };\n    };\n}\n/**\nClear all cached data of a memoized function.\n\n@param function_ - The memoized function.\n*/\nfunction memoizeClear(function_) {\n    const cache = cacheStore.get(function_);\n    if (!cache) {\n        throw new TypeError('Can\\'t clear a function that was not memoized!');\n    }\n    if (typeof cache.clear !== 'function') {\n        throw new TypeError('The cache Map can\\'t be cleared!');\n    }\n    cache.clear();\n    for (const timer of cacheTimerStore.get(function_) ?? []) {\n        clearTimeout(timer);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vbWVtb2l6ZUAxMC4xLjAvbm9kZV9tb2R1bGVzL21lbW9pemUvZGlzdHJpYnV0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDZSw4QkFBOEIsdUNBQXVDLElBQUk7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLG9CQUFvQjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLDBEQUFhO0FBQ2pCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVEsa0JBQWtCOztBQUUxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUIsYUFBYTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxzQ0FBc0M7QUFDN0M7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxrdWRyeVxcRG9jdW1lbnRzXFxSZWFjdFByb2plY3RzXFxyZWFjdC1ub3Rpb24teFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcbWVtb2l6ZUAxMC4xLjBcXG5vZGVfbW9kdWxlc1xcbWVtb2l6ZVxcZGlzdHJpYnV0aW9uXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWltaWNGdW5jdGlvbiBmcm9tICdtaW1pYy1mdW5jdGlvbic7XG5jb25zdCBjYWNoZVN0b3JlID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGNhY2hlVGltZXJTdG9yZSA9IG5ldyBXZWFrTWFwKCk7XG4vKipcbltNZW1vaXplXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9NZW1vaXphdGlvbikgZnVuY3Rpb25zIC0gQW4gb3B0aW1pemF0aW9uIHVzZWQgdG8gc3BlZWQgdXAgY29uc2VjdXRpdmUgZnVuY3Rpb24gY2FsbHMgYnkgY2FjaGluZyB0aGUgcmVzdWx0IG9mIGNhbGxzIHdpdGggaWRlbnRpY2FsIGlucHV0LlxuXG5AcGFyYW0gZnVuY3Rpb25fIC0gVGhlIGZ1bmN0aW9uIHRvIGJlIG1lbW9pemVkLlxuXG5AZXhhbXBsZVxuYGBgXG5pbXBvcnQgbWVtb2l6ZSBmcm9tICdtZW1vaXplJztcblxubGV0IGluZGV4ID0gMDtcbmNvbnN0IGNvdW50ZXIgPSAoKSA9PiArK2luZGV4O1xuY29uc3QgbWVtb2l6ZWQgPSBtZW1vaXplKGNvdW50ZXIpO1xuXG5tZW1vaXplZCgnZm9vJyk7XG4vLz0+IDFcblxuLy8gQ2FjaGVkIGFzIGl0J3MgdGhlIHNhbWUgYXJndW1lbnRcbm1lbW9pemVkKCdmb28nKTtcbi8vPT4gMVxuXG4vLyBOb3QgY2FjaGVkIGFueW1vcmUgYXMgdGhlIGFyZ3VtZW50cyBjaGFuZ2VkXG5tZW1vaXplZCgnYmFyJyk7XG4vLz0+IDJcblxubWVtb2l6ZWQoJ2JhcicpO1xuLy89PiAyXG5gYGBcbiovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtZW1vaXplKGZ1bmN0aW9uXywgeyBjYWNoZUtleSwgY2FjaGUgPSBuZXcgTWFwKCksIG1heEFnZSwgfSA9IHt9KSB7XG4gICAgaWYgKG1heEFnZSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb25fO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1heEFnZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgY29uc3QgbWF4U2V0SW50ZXJ2YWxWYWx1ZSA9IDJfMTQ3XzQ4M182NDc7XG4gICAgICAgIGlmIChtYXhBZ2UgPiBtYXhTZXRJbnRlcnZhbFZhbHVlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBUaGUgXFxgbWF4QWdlXFxgIG9wdGlvbiBjYW5ub3QgZXhjZWVkICR7bWF4U2V0SW50ZXJ2YWxWYWx1ZX0uYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1heEFnZSA8IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBgbWF4QWdlYCBvcHRpb24gc2hvdWxkIG5vdCBiZSBhIG5lZ2F0aXZlIG51bWJlci4nKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBtZW1vaXplZCA9IGZ1bmN0aW9uICguLi5hcmd1bWVudHNfKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IGNhY2hlS2V5ID8gY2FjaGVLZXkoYXJndW1lbnRzXykgOiBhcmd1bWVudHNfWzBdO1xuICAgICAgICBjb25zdCBjYWNoZUl0ZW0gPSBjYWNoZS5nZXQoa2V5KTtcbiAgICAgICAgaWYgKGNhY2hlSXRlbSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlSXRlbS5kYXRhO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGZ1bmN0aW9uXy5hcHBseSh0aGlzLCBhcmd1bWVudHNfKTtcbiAgICAgICAgY29uc3QgY29tcHV0ZWRNYXhBZ2UgPSB0eXBlb2YgbWF4QWdlID09PSAnZnVuY3Rpb24nID8gbWF4QWdlKC4uLmFyZ3VtZW50c18pIDogbWF4QWdlO1xuICAgICAgICBjYWNoZS5zZXQoa2V5LCB7XG4gICAgICAgICAgICBkYXRhOiByZXN1bHQsXG4gICAgICAgICAgICBtYXhBZ2U6IGNvbXB1dGVkTWF4QWdlID8gRGF0ZS5ub3coKSArIGNvbXB1dGVkTWF4QWdlIDogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNvbXB1dGVkTWF4QWdlICYmIGNvbXB1dGVkTWF4QWdlID4gMCAmJiBjb21wdXRlZE1heEFnZSAhPT0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZKSB7XG4gICAgICAgICAgICBjb25zdCB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNhY2hlLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfSwgY29tcHV0ZWRNYXhBZ2UpO1xuICAgICAgICAgICAgdGltZXIudW5yZWY/LigpO1xuICAgICAgICAgICAgY29uc3QgdGltZXJzID0gY2FjaGVUaW1lclN0b3JlLmdldChmdW5jdGlvbl8pID8/IG5ldyBTZXQoKTtcbiAgICAgICAgICAgIHRpbWVycy5hZGQodGltZXIpO1xuICAgICAgICAgICAgY2FjaGVUaW1lclN0b3JlLnNldChmdW5jdGlvbl8sIHRpbWVycyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIG1pbWljRnVuY3Rpb24obWVtb2l6ZWQsIGZ1bmN0aW9uXywge1xuICAgICAgICBpZ25vcmVOb25Db25maWd1cmFibGU6IHRydWUsXG4gICAgfSk7XG4gICAgY2FjaGVTdG9yZS5zZXQobWVtb2l6ZWQsIGNhY2hlKTtcbiAgICByZXR1cm4gbWVtb2l6ZWQ7XG59XG4vKipcbkByZXR1cm5zIEEgW2RlY29yYXRvcl0oaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZGVjb3JhdG9ycykgdG8gbWVtb2l6ZSBjbGFzcyBtZXRob2RzIG9yIHN0YXRpYyBjbGFzcyBtZXRob2RzLlxuXG5AZXhhbXBsZVxuYGBgXG5pbXBvcnQge21lbW9pemVEZWNvcmF0b3J9IGZyb20gJ21lbW9pemUnO1xuXG5jbGFzcyBFeGFtcGxlIHtcbiAgICBpbmRleCA9IDBcblxuICAgIEBtZW1vaXplRGVjb3JhdG9yKClcbiAgICBjb3VudGVyKCkge1xuICAgICAgICByZXR1cm4gKyt0aGlzLmluZGV4O1xuICAgIH1cbn1cblxuY2xhc3MgRXhhbXBsZVdpdGhPcHRpb25zIHtcbiAgICBpbmRleCA9IDBcblxuICAgIEBtZW1vaXplRGVjb3JhdG9yKHttYXhBZ2U6IDEwMDB9KVxuICAgIGNvdW50ZXIoKSB7XG4gICAgICAgIHJldHVybiArK3RoaXMuaW5kZXg7XG4gICAgfVxufVxuYGBgXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIG1lbW9pemVEZWNvcmF0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgaW5zdGFuY2VNYXAgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiAodGFyZ2V0LCBwcm9wZXJ0eUtleSwgZGVzY3JpcHRvcikgPT4ge1xuICAgICAgICBjb25zdCBpbnB1dCA9IHRhcmdldFtwcm9wZXJ0eUtleV07IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1hc3NpZ25tZW50XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBkZWNvcmF0ZWQgdmFsdWUgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIGRlc2NyaXB0b3IudmFsdWU7XG4gICAgICAgIGRlbGV0ZSBkZXNjcmlwdG9yLndyaXRhYmxlO1xuICAgICAgICBkZXNjcmlwdG9yLmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghaW5zdGFuY2VNYXAuaGFzKHRoaXMpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBtZW1vaXplKGlucHV0LCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICBpbnN0YW5jZU1hcC5zZXQodGhpcywgdmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpbnN0YW5jZU1hcC5nZXQodGhpcyk7XG4gICAgICAgIH07XG4gICAgfTtcbn1cbi8qKlxuQ2xlYXIgYWxsIGNhY2hlZCBkYXRhIG9mIGEgbWVtb2l6ZWQgZnVuY3Rpb24uXG5cbkBwYXJhbSBmdW5jdGlvbl8gLSBUaGUgbWVtb2l6ZWQgZnVuY3Rpb24uXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIG1lbW9pemVDbGVhcihmdW5jdGlvbl8pIHtcbiAgICBjb25zdCBjYWNoZSA9IGNhY2hlU3RvcmUuZ2V0KGZ1bmN0aW9uXyk7XG4gICAgaWYgKCFjYWNoZSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDYW5cXCd0IGNsZWFyIGEgZnVuY3Rpb24gdGhhdCB3YXMgbm90IG1lbW9pemVkIScpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNhY2hlLmNsZWFyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBjYWNoZSBNYXAgY2FuXFwndCBiZSBjbGVhcmVkIScpO1xuICAgIH1cbiAgICBjYWNoZS5jbGVhcigpO1xuICAgIGZvciAoY29uc3QgdGltZXIgb2YgY2FjaGVUaW1lclN0b3JlLmdldChmdW5jdGlvbl8pID8/IFtdKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/../../node_modules/.pnpm/memoize@10.1.0/node_modules/memoize/distribution/index.js\n");

/***/ })

};
;